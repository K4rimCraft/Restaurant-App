

#include <Arduino.h>

#include <ESP8266WiFi.h>
#include <ESP8266WiFiMulti.h>

#include <ESP8266HTTPClient.h>

#include <WiFiClient.h>
#include <SPI.h>
#include <MFRC522.h>
#include "NfcAdapter.h"

#define CS_PIN D8

MFRC522 mfrc522(CS_PIN, UINT8_MAX);  // Create MFRC522 instance

NfcAdapter nfc = NfcAdapter(&mfrc522);

ESP8266WiFiMulti WiFiMulti;

void setup() {

  Serial.begin(115200);
  // Serial.setDebugOutput(true);

  Serial.println();
  Serial.println();
  Serial.println();
  SPI.begin();         // Init SPI bus
  mfrc522.PCD_Init();  // Init MFRC522
  nfc.begin();
  pinMode(LED_BUILTIN, OUTPUT); 
  for (uint8_t t = 4; t > 0; t--) {
    Serial.printf("[SETUP] WAIT %d...\n", t);
    Serial.flush();
    delay(1000);
  }

  WiFi.mode(WIFI_STA);
  WiFiMulti.addAP("Galaxy S10+07b3", "gnis2682");
}

void loop() {
  // wait for WiFi connection
  if ((WiFiMulti.run() == WL_CONNECTED)) {

    WiFiClient client;

    HTTPClient http;
    digitalWrite(LED_BUILTIN, LOW);
    Serial.print("[HTTP] begin...\n");
    if (http.begin(client, "http://192.168.127.80:3000/delivery/getOrderConfrimationNumber/3")) {  // HTTP


      Serial.print("[HTTP] GET...\n");
      // start connection and send HTTP header
      int httpCode = http.GET();

      // httpCode will be negative on error
      if (httpCode > 0) {
        // HTTP header has been send and Server response header has been handled
        Serial.printf("[HTTP] GET... code: %d\n", httpCode);

        // file found at server
        if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
       
          
       
          String payload = http.getString();
          Serial.println(payload);

          if (nfc.tagPresent()) {
            Serial.println("Writing record to NFC tag");
            NdefMessage message = NdefMessage();
            message.addTextRecord(payload.c_str());
            bool success = nfc.write(message);
            if (success) {
              Serial.println("\tSuccess. Try reading this tag with your phone.");
          
            } else {
              Serial.println("\tWrite failed.");
            }
          }
        }
      } else {
        Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
      }
      http.end();
    } else {
      Serial.println("[HTTP] Unable to connect");
    }
  }
           digitalWrite(LED_BUILTIN, HIGH);
  delay(5000);
}